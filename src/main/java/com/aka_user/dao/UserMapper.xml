<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
    
<mapper namespace="aka_user">
  
	<select id="getUserDataByEmail" parameterType="String" resultType="UserCommand">
		select * from aka_user_login where user_email=#{email}
	</select>
	
	<select id="getCountByEmail" parameterType="String" resultType="int">
		select count(*) from aka_user where user_email=#{user_email}
	</select>
	
	<select id="getCountByNickname" parameterType="String" resultType="int">
		select count(*) from aka_user where user_nickname=#{user_nickname}
	</select>
	
	<insert id="insertUserDataInToTheCore" parameterType="UserCommand">
		insert into aka_user(user_email , user_password , user_nickname , img_id) 
		values(#{user_email}, #{user_password}, #{user_nickname}, #{img_id})
	</insert>
	
	<insert id="insertUserDataInToTheLogin" parameterType="UserCommand">
		insert into aka_user_login(user_email , user_password) 
		values(#{user_email}, #{user_password})
	</insert>
	
	<insert id="insertAuthorityData" parameterType="UserAuthCommand">
		INSERT INTO AKA_USER_ADMIN( USER_EMAIL, ADMIN_PASSWORD, ADMIN_LEVEL )
		VALUES  ( #{user_email}, #{user_password}, #{admin_level} )
	</insert>
	

	
	<select id="checkSuperUser" parameterType="String" resultType="int">
		SELECT  COUNT(U.USER_EMAIL)
		FROM    AKA_USER_LOGIN U JOIN AKA_USER_ADMIN A
		ON      U.USER_EMAIL = A.USER_EMAIL
		WHERE   	A.ADMIN_LEVEL >= 5 
				AND 
					U.USER_EMAIL = #{user_email}	
	</select>	
	
	<select id="getUsersMetadata" resultType="UserMetadataCommand">
		SELECT  U.USER_EMAIL,    U.IMG_ID,   U.USER_NICKNAME,    U.VALIDATION,
		        A.ADMIN_LEVEL
		FROM    AKA_USER U JOIN AKA_USER_ADMIN A
		ON 		U.USER_EMAIL = A.USER_EMAIL
	</select>
	 
	<select id="getUserMetaDataByEmail" parameterType="String" resultType="UserMetadataCommand">
		SELECT	U.USER_EMAIL, U.USER_NICKNAME, U.IMG_ID, U.VALIDATION, U.USER_PASSWORD, A.ADMIN_LEVEL
		FROM	AKA_USER U	JOIN	AKA_USER_ADMIN A
		ON		U.USER_EMAIL	=	A.USER_EMAIL
		WHERE	U.USER_EMAIL	=	#{user_email}
	</select>
	

	
	<update id="mgr_updateUsrData" parameterType="UserCommand">
		UPDATE AKA_USER
		SET 
		    IMG_ID          =   #{img_id},
		    USER_NICKNAME   =   #{user_nickname},
		    VALIDATION      =   #{validation}
		WHERE   USER_EMAIL  =   #{user_email}	
	</update>
	
	<update id="mgr_updateUsrAuthority" parameterType="UserMetadataCommand"> 
		UPDATE AKA_USER_ADMIN
		SET 
		        ADMIN_LEVEL	=	#{admin_level}
		WHERE	USER_EMAIL	=	#{user_email}
	</update>	
	
	<delete id="del_authData" parameterType="String">
		DELETE FROM AKA_USER_ADMIN
		WHERE	USER_EMAIL    =   #{user_email}
	</delete>
	
	<delete id="del_loginData" parameterType="String">
		DELETE FROM AKA_USER_LOGIN
		WHERE USER_EMAIL    =   #{user_email}
	</delete>
	
	<delete id="del_userData" parameterType="String">
		DELETE FROM AKA_USER
		WHERE USER_EMAIL    =   #{user_email}
	</delete>
	
	<update id="updateAkaUser" parameterType="UserMetadataCommand">
		UPDATE AKA_USER
		SET 
		    USER_NICKNAME   =   #{user_nickname}
		    ,USER_PASSWORD  =   #{user_password}
		    ,IMG_ID         =   #{img_id}
		WHERE   USER_EMAIL  =   #{user_email}
	</update>
	
	<update id="updateAkaUserAdmin" parameterType="UserMetadataCommand">
		UPDATE AKA_USER_ADMIN
		SET     ADMIN_PASSWORD	=   #{user_password}
		WHERE   USER_EMAIL		=   #{user_email}
	</update>
	
	<update id="updateAkaUserLogin" parameterType="UserMetadataCommand">
		UPDATE AKA_USER_LOGIN
		SET 
		    USER_PASSWORD  	=   #{user_password}
		WHERE   USER_EMAIL  =   #{user_email}
	</update>
	

	

	

	
	
</mapper>







